"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/accounts/route";
exports.ids = ["app/api/accounts/route"];
exports.modules = {

/***/ "@prisma/client":
/*!*********************************!*\
  !*** external "@prisma/client" ***!
  \*********************************/
/***/ ((module) => {

module.exports = require("@prisma/client");

/***/ }),

/***/ "../../client/components/action-async-storage.external":
/*!*******************************************************************************!*\
  !*** external "next/dist/client/components/action-async-storage.external.js" ***!
  \*******************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/client/components/action-async-storage.external.js");

/***/ }),

/***/ "../../client/components/request-async-storage.external":
/*!********************************************************************************!*\
  !*** external "next/dist/client/components/request-async-storage.external.js" ***!
  \********************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/client/components/request-async-storage.external.js");

/***/ }),

/***/ "../../client/components/static-generation-async-storage.external":
/*!******************************************************************************************!*\
  !*** external "next/dist/client/components/static-generation-async-storage.external.js" ***!
  \******************************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/client/components/static-generation-async-storage.external.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "crypto":
/*!*************************!*\
  !*** external "crypto" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("crypto");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Faccounts%2Froute&page=%2Fapi%2Faccounts%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Faccounts%2Froute.ts&appDir=C%3A%5CUsers%5CAdministrator%5C.cursor-projects%5Cprojects%5CCommissable%20CRM%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5CAdministrator%5C.cursor-projects%5Cprojects%5CCommissable%20CRM&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Faccounts%2Froute&page=%2Fapi%2Faccounts%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Faccounts%2Froute.ts&appDir=C%3A%5CUsers%5CAdministrator%5C.cursor-projects%5Cprojects%5CCommissable%20CRM%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5CAdministrator%5C.cursor-projects%5Cprojects%5CCommissable%20CRM&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var C_Users_Administrator_cursor_projects_projects_Commissable_CRM_app_api_accounts_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./app/api/accounts/route.ts */ \"(rsc)/./app/api/accounts/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/accounts/route\",\n        pathname: \"/api/accounts\",\n        filename: \"route\",\n        bundlePath: \"app/api/accounts/route\"\n    },\n    resolvedPagePath: \"C:\\\\Users\\\\Administrator\\\\.cursor-projects\\\\projects\\\\Commissable CRM\\\\app\\\\api\\\\accounts\\\\route.ts\",\n    nextConfigOutput,\n    userland: C_Users_Administrator_cursor_projects_projects_Commissable_CRM_app_api_accounts_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks } = routeModule;\nconst originalPathname = \"/api/accounts/route\";\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZhY2NvdW50cyUyRnJvdXRlJnBhZ2U9JTJGYXBpJTJGYWNjb3VudHMlMkZyb3V0ZSZhcHBQYXRocz0mcGFnZVBhdGg9cHJpdmF0ZS1uZXh0LWFwcC1kaXIlMkZhcGklMkZhY2NvdW50cyUyRnJvdXRlLnRzJmFwcERpcj1DJTNBJTVDVXNlcnMlNUNBZG1pbmlzdHJhdG9yJTVDLmN1cnNvci1wcm9qZWN0cyU1Q3Byb2plY3RzJTVDQ29tbWlzc2FibGUlMjBDUk0lNUNhcHAmcGFnZUV4dGVuc2lvbnM9dHN4JnBhZ2VFeHRlbnNpb25zPXRzJnBhZ2VFeHRlbnNpb25zPWpzeCZwYWdlRXh0ZW5zaW9ucz1qcyZyb290RGlyPUMlM0ElNUNVc2VycyU1Q0FkbWluaXN0cmF0b3IlNUMuY3Vyc29yLXByb2plY3RzJTVDcHJvamVjdHMlNUNDb21taXNzYWJsZSUyMENSTSZpc0Rldj10cnVlJnRzY29uZmlnUGF0aD10c2NvbmZpZy5qc29uJmJhc2VQYXRoPSZhc3NldFByZWZpeD0mbmV4dENvbmZpZ091dHB1dD0mcHJlZmVycmVkUmVnaW9uPSZtaWRkbGV3YXJlQ29uZmlnPWUzMCUzRCEiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7O0FBQXNHO0FBQ3ZDO0FBQ2M7QUFDbUQ7QUFDaEk7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLGdIQUFtQjtBQUMzQztBQUNBLGNBQWMseUVBQVM7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLFlBQVk7QUFDWixDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0EsUUFBUSxpRUFBaUU7QUFDekU7QUFDQTtBQUNBLFdBQVcsNEVBQVc7QUFDdEI7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUN1SDs7QUFFdkgiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jb21taXNzYWJsZS1jcm0vPzQ1ZjkiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQXBwUm91dGVSb3V0ZU1vZHVsZSB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1tb2R1bGVzL2FwcC1yb3V0ZS9tb2R1bGUuY29tcGlsZWRcIjtcbmltcG9ydCB7IFJvdXRlS2luZCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1raW5kXCI7XG5pbXBvcnQgeyBwYXRjaEZldGNoIGFzIF9wYXRjaEZldGNoIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvbGliL3BhdGNoLWZldGNoXCI7XG5pbXBvcnQgKiBhcyB1c2VybGFuZCBmcm9tIFwiQzpcXFxcVXNlcnNcXFxcQWRtaW5pc3RyYXRvclxcXFwuY3Vyc29yLXByb2plY3RzXFxcXHByb2plY3RzXFxcXENvbW1pc3NhYmxlIENSTVxcXFxhcHBcXFxcYXBpXFxcXGFjY291bnRzXFxcXHJvdXRlLnRzXCI7XG4vLyBXZSBpbmplY3QgdGhlIG5leHRDb25maWdPdXRwdXQgaGVyZSBzbyB0aGF0IHdlIGNhbiB1c2UgdGhlbSBpbiB0aGUgcm91dGVcbi8vIG1vZHVsZS5cbmNvbnN0IG5leHRDb25maWdPdXRwdXQgPSBcIlwiXG5jb25zdCByb3V0ZU1vZHVsZSA9IG5ldyBBcHBSb3V0ZVJvdXRlTW9kdWxlKHtcbiAgICBkZWZpbml0aW9uOiB7XG4gICAgICAgIGtpbmQ6IFJvdXRlS2luZC5BUFBfUk9VVEUsXG4gICAgICAgIHBhZ2U6IFwiL2FwaS9hY2NvdW50cy9yb3V0ZVwiLFxuICAgICAgICBwYXRobmFtZTogXCIvYXBpL2FjY291bnRzXCIsXG4gICAgICAgIGZpbGVuYW1lOiBcInJvdXRlXCIsXG4gICAgICAgIGJ1bmRsZVBhdGg6IFwiYXBwL2FwaS9hY2NvdW50cy9yb3V0ZVwiXG4gICAgfSxcbiAgICByZXNvbHZlZFBhZ2VQYXRoOiBcIkM6XFxcXFVzZXJzXFxcXEFkbWluaXN0cmF0b3JcXFxcLmN1cnNvci1wcm9qZWN0c1xcXFxwcm9qZWN0c1xcXFxDb21taXNzYWJsZSBDUk1cXFxcYXBwXFxcXGFwaVxcXFxhY2NvdW50c1xcXFxyb3V0ZS50c1wiLFxuICAgIG5leHRDb25maWdPdXRwdXQsXG4gICAgdXNlcmxhbmRcbn0pO1xuLy8gUHVsbCBvdXQgdGhlIGV4cG9ydHMgdGhhdCB3ZSBuZWVkIHRvIGV4cG9zZSBmcm9tIHRoZSBtb2R1bGUuIFRoaXMgc2hvdWxkXG4vLyBiZSBlbGltaW5hdGVkIHdoZW4gd2UndmUgbW92ZWQgdGhlIG90aGVyIHJvdXRlcyB0byB0aGUgbmV3IGZvcm1hdC4gVGhlc2Vcbi8vIGFyZSB1c2VkIHRvIGhvb2sgaW50byB0aGUgcm91dGUuXG5jb25zdCB7IHJlcXVlc3RBc3luY1N0b3JhZ2UsIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2UsIHNlcnZlckhvb2tzIH0gPSByb3V0ZU1vZHVsZTtcbmNvbnN0IG9yaWdpbmFsUGF0aG5hbWUgPSBcIi9hcGkvYWNjb3VudHMvcm91dGVcIjtcbmZ1bmN0aW9uIHBhdGNoRmV0Y2goKSB7XG4gICAgcmV0dXJuIF9wYXRjaEZldGNoKHtcbiAgICAgICAgc2VydmVySG9va3MsXG4gICAgICAgIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2VcbiAgICB9KTtcbn1cbmV4cG9ydCB7IHJvdXRlTW9kdWxlLCByZXF1ZXN0QXN5bmNTdG9yYWdlLCBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlLCBzZXJ2ZXJIb29rcywgb3JpZ2luYWxQYXRobmFtZSwgcGF0Y2hGZXRjaCwgIH07XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFwcC1yb3V0ZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Faccounts%2Froute&page=%2Fapi%2Faccounts%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Faccounts%2Froute.ts&appDir=C%3A%5CUsers%5CAdministrator%5C.cursor-projects%5Cprojects%5CCommissable%20CRM%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5CAdministrator%5C.cursor-projects%5Cprojects%5CCommissable%20CRM&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./app/api/accounts/helpers.ts":
/*!*************************************!*\
  !*** ./app/api/accounts/helpers.ts ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   accountIncludeForList: () => (/* binding */ accountIncludeForList),\n/* harmony export */   mapAccountToListRow: () => (/* binding */ mapAccountToListRow)\n/* harmony export */ });\nfunction mapAccountToListRow(account) {\n    return {\n        id: account.id,\n        active: account.status === \"Active\",\n        accountName: account.accountName,\n        accountLegalName: account.accountLegalName ?? \"\",\n        accountType: account.accountType?.name ?? \"\",\n        accountOwner: account.owner?.fullName ?? \"\",\n        shippingState: account.shippingAddress?.state ?? \"\",\n        shippingCity: account.shippingAddress?.city ?? \"\",\n        shippingZip: account.shippingAddress?.postalCode ?? \"\",\n        shippingStreet: account.shippingAddress?.line1 ?? \"\",\n        shippingStreet2: account.shippingAddress?.line2 ?? \"\"\n    };\n}\nconst accountIncludeForList = {\n    accountType: {\n        select: {\n            name: true\n        }\n    },\n    owner: {\n        select: {\n            fullName: true\n        }\n    },\n    shippingAddress: {\n        select: {\n            line1: true,\n            line2: true,\n            city: true,\n            state: true,\n            postalCode: true\n        }\n    }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9hcHAvYXBpL2FjY291bnRzL2hlbHBlcnMudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBTyxTQUFTQSxvQkFBb0JDLE9BQVk7SUFDOUMsT0FBTztRQUNMQyxJQUFJRCxRQUFRQyxFQUFFO1FBQ2RDLFFBQVFGLFFBQVFHLE1BQU0sS0FBSztRQUMzQkMsYUFBYUosUUFBUUksV0FBVztRQUNoQ0Msa0JBQWtCTCxRQUFRSyxnQkFBZ0IsSUFBSTtRQUM5Q0MsYUFBYU4sUUFBUU0sV0FBVyxFQUFFQyxRQUFRO1FBQzFDQyxjQUFjUixRQUFRUyxLQUFLLEVBQUVDLFlBQVk7UUFDekNDLGVBQWVYLFFBQVFZLGVBQWUsRUFBRUMsU0FBUztRQUNqREMsY0FBY2QsUUFBUVksZUFBZSxFQUFFRyxRQUFRO1FBQy9DQyxhQUFhaEIsUUFBUVksZUFBZSxFQUFFSyxjQUFjO1FBQ3BEQyxnQkFBZ0JsQixRQUFRWSxlQUFlLEVBQUVPLFNBQVM7UUFDbERDLGlCQUFpQnBCLFFBQVFZLGVBQWUsRUFBRVMsU0FBUztJQUNyRDtBQUNGO0FBRU8sTUFBTUMsd0JBQXdCO0lBQ25DaEIsYUFBYTtRQUFFaUIsUUFBUTtZQUFFaEIsTUFBTTtRQUFLO0lBQUU7SUFDdENFLE9BQU87UUFBRWMsUUFBUTtZQUFFYixVQUFVO1FBQUs7SUFBRTtJQUNwQ0UsaUJBQWlCO1FBQ2ZXLFFBQVE7WUFBRUosT0FBTztZQUFNRSxPQUFPO1lBQU1OLE1BQU07WUFBTUYsT0FBTztZQUFNSSxZQUFZO1FBQUs7SUFDaEY7QUFDRixFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY29tbWlzc2FibGUtY3JtLy4vYXBwL2FwaS9hY2NvdW50cy9oZWxwZXJzLnRzPzJlNDIiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGZ1bmN0aW9uIG1hcEFjY291bnRUb0xpc3RSb3coYWNjb3VudDogYW55KSB7XG4gIHJldHVybiB7XG4gICAgaWQ6IGFjY291bnQuaWQsXG4gICAgYWN0aXZlOiBhY2NvdW50LnN0YXR1cyA9PT0gXCJBY3RpdmVcIixcbiAgICBhY2NvdW50TmFtZTogYWNjb3VudC5hY2NvdW50TmFtZSxcbiAgICBhY2NvdW50TGVnYWxOYW1lOiBhY2NvdW50LmFjY291bnRMZWdhbE5hbWUgPz8gXCJcIixcbiAgICBhY2NvdW50VHlwZTogYWNjb3VudC5hY2NvdW50VHlwZT8ubmFtZSA/PyBcIlwiLFxuICAgIGFjY291bnRPd25lcjogYWNjb3VudC5vd25lcj8uZnVsbE5hbWUgPz8gXCJcIixcbiAgICBzaGlwcGluZ1N0YXRlOiBhY2NvdW50LnNoaXBwaW5nQWRkcmVzcz8uc3RhdGUgPz8gXCJcIixcbiAgICBzaGlwcGluZ0NpdHk6IGFjY291bnQuc2hpcHBpbmdBZGRyZXNzPy5jaXR5ID8/IFwiXCIsXG4gICAgc2hpcHBpbmdaaXA6IGFjY291bnQuc2hpcHBpbmdBZGRyZXNzPy5wb3N0YWxDb2RlID8/IFwiXCIsXG4gICAgc2hpcHBpbmdTdHJlZXQ6IGFjY291bnQuc2hpcHBpbmdBZGRyZXNzPy5saW5lMSA/PyBcIlwiLFxuICAgIHNoaXBwaW5nU3RyZWV0MjogYWNjb3VudC5zaGlwcGluZ0FkZHJlc3M/LmxpbmUyID8/IFwiXCJcbiAgfVxufVxuXG5leHBvcnQgY29uc3QgYWNjb3VudEluY2x1ZGVGb3JMaXN0ID0ge1xuICBhY2NvdW50VHlwZTogeyBzZWxlY3Q6IHsgbmFtZTogdHJ1ZSB9IH0sXG4gIG93bmVyOiB7IHNlbGVjdDogeyBmdWxsTmFtZTogdHJ1ZSB9IH0sXG4gIHNoaXBwaW5nQWRkcmVzczoge1xuICAgIHNlbGVjdDogeyBsaW5lMTogdHJ1ZSwgbGluZTI6IHRydWUsIGNpdHk6IHRydWUsIHN0YXRlOiB0cnVlLCBwb3N0YWxDb2RlOiB0cnVlIH1cbiAgfVxufVxuIl0sIm5hbWVzIjpbIm1hcEFjY291bnRUb0xpc3RSb3ciLCJhY2NvdW50IiwiaWQiLCJhY3RpdmUiLCJzdGF0dXMiLCJhY2NvdW50TmFtZSIsImFjY291bnRMZWdhbE5hbWUiLCJhY2NvdW50VHlwZSIsIm5hbWUiLCJhY2NvdW50T3duZXIiLCJvd25lciIsImZ1bGxOYW1lIiwic2hpcHBpbmdTdGF0ZSIsInNoaXBwaW5nQWRkcmVzcyIsInN0YXRlIiwic2hpcHBpbmdDaXR5IiwiY2l0eSIsInNoaXBwaW5nWmlwIiwicG9zdGFsQ29kZSIsInNoaXBwaW5nU3RyZWV0IiwibGluZTEiLCJzaGlwcGluZ1N0cmVldDIiLCJsaW5lMiIsImFjY291bnRJbmNsdWRlRm9yTGlzdCIsInNlbGVjdCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./app/api/accounts/helpers.ts\n");

/***/ }),

/***/ "(rsc)/./app/api/accounts/route.ts":
/*!***********************************!*\
  !*** ./app/api/accounts/route.ts ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GET: () => (/* binding */ GET),\n/* harmony export */   POST: () => (/* binding */ POST)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @prisma/client */ \"@prisma/client\");\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_prisma_client__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _lib_db__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/lib/db */ \"(rsc)/./lib/db.ts\");\n/* harmony import */ var _helpers__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./helpers */ \"(rsc)/./app/api/accounts/helpers.ts\");\n/* harmony import */ var _lib_api_auth__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @/lib/api-auth */ \"(rsc)/./lib/api-auth.ts\");\n/* harmony import */ var _lib_audit__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @/lib/audit */ \"(rsc)/./lib/audit.ts\");\n/* harmony import */ var _lib_validation__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @/lib/validation */ \"(rsc)/./lib/validation.ts\");\n/* harmony import */ var next_cache__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! next/cache */ \"(rsc)/./node_modules/next/cache.js\");\n/* harmony import */ var next_cache__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(next_cache__WEBPACK_IMPORTED_MODULE_7__);\n\n\n\n\n\n\n\n\nfunction coerceOptionalId(value) {\n    if (typeof value !== \"string\") {\n        return null;\n    }\n    const trimmed = value.trim();\n    return trimmed.length > 0 ? trimmed : null;\n}\nfunction parseAddress(raw) {\n    if (!raw || typeof raw !== \"object\") {\n        return null;\n    }\n    const candidate = raw;\n    const line1 = typeof candidate.line1 === \"string\" ? candidate.line1.trim() : \"\";\n    const city = typeof candidate.city === \"string\" ? candidate.city.trim() : \"\";\n    if (!line1 || !city) {\n        return null;\n    }\n    const line2 = typeof candidate.line2 === \"string\" ? candidate.line2.trim() : \"\";\n    const state = typeof candidate.state === \"string\" ? candidate.state.trim() : \"\";\n    const postalCode = typeof candidate.postalCode === \"string\" ? candidate.postalCode.trim() : \"\";\n    const country = typeof candidate.country === \"string\" ? candidate.country.trim() : \"\";\n    return {\n        line1,\n        city,\n        line2: line2 || undefined,\n        state: state || undefined,\n        postalCode: postalCode || undefined,\n        country: country || undefined\n    };\n}\nasync function createAddressRecord(tenantId, input) {\n    if (!input) {\n        return null;\n    }\n    const address = await _lib_db__WEBPACK_IMPORTED_MODULE_2__.prisma.address.create({\n        data: {\n            tenantId,\n            line1: input.line1,\n            line2: input.line2 ?? null,\n            city: input.city,\n            state: input.state ?? null,\n            postalCode: input.postalCode ?? null,\n            country: input.country ?? null\n        }\n    });\n    return address.id;\n}\nasync function GET(request) {\n    return (0,_lib_api_auth__WEBPACK_IMPORTED_MODULE_4__.withPermissions)(request, [\n        \"accounts.manage\",\n        \"accounts.read\"\n    ], async (req)=>{\n        try {\n            const searchParams = request.nextUrl.searchParams;\n            const tenantId = req.user.tenantId;\n            const page = Number(searchParams.get(\"page\") ?? \"1\");\n            const pageSize = Number(searchParams.get(\"pageSize\") ?? \"25\");\n            const query = searchParams.get(\"q\")?.trim() ?? \"\";\n            const whereClause = {\n                tenantId\n            };\n            if (query.length > 0) {\n                whereClause.OR = [\n                    {\n                        accountName: {\n                            contains: query,\n                            mode: \"insensitive\"\n                        }\n                    },\n                    {\n                        accountLegalName: {\n                            contains: query,\n                            mode: \"insensitive\"\n                        }\n                    },\n                    {\n                        owner: {\n                            is: {\n                                fullName: {\n                                    contains: query,\n                                    mode: \"insensitive\"\n                                }\n                            }\n                        }\n                    }\n                ];\n            }\n            const [accounts, total] = await Promise.all([\n                _lib_db__WEBPACK_IMPORTED_MODULE_2__.prisma.account.findMany({\n                    where: whereClause,\n                    include: _helpers__WEBPACK_IMPORTED_MODULE_3__.accountIncludeForList,\n                    orderBy: {\n                        createdAt: \"desc\"\n                    },\n                    skip: (page - 1) * pageSize,\n                    take: pageSize\n                }),\n                _lib_db__WEBPACK_IMPORTED_MODULE_2__.prisma.account.count({\n                    where: whereClause\n                })\n            ]);\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                data: accounts.map(_helpers__WEBPACK_IMPORTED_MODULE_3__.mapAccountToListRow),\n                pagination: {\n                    page,\n                    pageSize,\n                    total\n                }\n            });\n        } catch (error) {\n            console.error(\"Failed to load accounts\", error);\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Failed to load accounts\"\n            }, {\n                status: 500\n            });\n        }\n    });\n}\nasync function POST(request) {\n    return (0,_lib_api_auth__WEBPACK_IMPORTED_MODULE_4__.withPermissions)(request, [\n        \"accounts.manage\"\n    ], async (req)=>{\n        try {\n            const payload = await request.json();\n            // Validate account data according to contract requirements\n            const validationResult = (0,_lib_validation__WEBPACK_IMPORTED_MODULE_6__.validateAccountData)(payload);\n            if (!validationResult.isValid) {\n                return (0,_lib_validation__WEBPACK_IMPORTED_MODULE_6__.createValidationErrorResponse)(validationResult.errors);\n            }\n            const accountName = typeof payload.accountName === \"string\" ? payload.accountName.trim() : \"\";\n            const accountTypeId = coerceOptionalId(payload.accountTypeId);\n            const tenantId = req.user.tenantId;\n            const userId = req.user.id;\n            if (accountTypeId) {\n                const accountTypeExists = await _lib_db__WEBPACK_IMPORTED_MODULE_2__.prisma.accountType.findFirst({\n                    where: {\n                        id: accountTypeId,\n                        tenantId\n                    },\n                    select: {\n                        id: true\n                    }\n                });\n                if (!accountTypeExists) {\n                    return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                        error: \"Invalid account type\"\n                    }, {\n                        status: 400\n                    });\n                }\n            }\n            const parentAccountId = coerceOptionalId(payload.parentAccountId);\n            const ownerId = coerceOptionalId(payload.ownerId);\n            const industryId = coerceOptionalId(payload.industryId);\n            const isActive = typeof payload.active === \"boolean\" ? payload.active : true;\n            const syncBillingWithShipping = Boolean(payload.syncBillingWithShipping ?? payload.billingSameAsShipping);\n            const shippingAddressInput = parseAddress(payload.shippingAddress);\n            const billingAddressInput = syncBillingWithShipping ? shippingAddressInput : parseAddress(payload.billingAddress);\n            const [shippingAddressId, billingAddressIdIfAny] = await Promise.all([\n                createAddressRecord(tenantId, shippingAddressInput),\n                syncBillingWithShipping ? Promise.resolve(null) : createAddressRecord(tenantId, billingAddressInput)\n            ]);\n            const billingAddressId = syncBillingWithShipping ? shippingAddressId : billingAddressIdIfAny;\n            const account = await _lib_db__WEBPACK_IMPORTED_MODULE_2__.prisma.account.create({\n                data: {\n                    tenantId,\n                    accountTypeId: accountTypeId,\n                    ...parentAccountId && {\n                        parentAccountId\n                    },\n                    ...ownerId && {\n                        ownerId\n                    },\n                    ...industryId && {\n                        industryId\n                    },\n                    accountName,\n                    accountLegalName: typeof payload.accountLegalName === \"string\" && payload.accountLegalName.trim().length > 0 ? payload.accountLegalName.trim() : null,\n                    status: isActive ? _prisma_client__WEBPACK_IMPORTED_MODULE_1__.AccountStatus.Active : _prisma_client__WEBPACK_IMPORTED_MODULE_1__.AccountStatus.Inactive,\n                    websiteUrl: typeof payload.websiteUrl === \"string\" && payload.websiteUrl.trim().length > 0 ? payload.websiteUrl.trim() : null,\n                    description: typeof payload.description === \"string\" && payload.description.trim().length > 0 ? payload.description.trim() : null,\n                    shippingAddressId,\n                    billingAddressId,\n                    shippingSyncBilling: syncBillingWithShipping,\n                    createdById: userId,\n                    updatedById: userId\n                },\n                include: _helpers__WEBPACK_IMPORTED_MODULE_3__.accountIncludeForList\n            });\n            // Log audit event for account creation\n            await (0,_lib_audit__WEBPACK_IMPORTED_MODULE_5__.logAccountAudit)(_prisma_client__WEBPACK_IMPORTED_MODULE_1__.AuditAction.Create, account.id, userId, tenantId, request, undefined, {\n                accountName: account.accountName,\n                accountLegalName: account.accountLegalName,\n                accountTypeId: account.accountTypeId,\n                status: account.status,\n                websiteUrl: account.websiteUrl,\n                description: account.description\n            });\n            // Invalidate cache to ensure UI updates immediately\n            (0,next_cache__WEBPACK_IMPORTED_MODULE_7__.revalidatePath)(\"/accounts\");\n            (0,next_cache__WEBPACK_IMPORTED_MODULE_7__.revalidatePath)(\"/dashboard\");\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                data: (0,_helpers__WEBPACK_IMPORTED_MODULE_3__.mapAccountToListRow)(account)\n            }, {\n                status: 201\n            });\n        } catch (error) {\n            console.error(\"Failed to create account\", error);\n            const message = error?.message ?? \"Failed to create account\";\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: message\n            }, {\n                status: 500\n            });\n        }\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./app/api/accounts/route.ts\n");

/***/ }),

/***/ "(rsc)/./lib/api-auth.ts":
/*!*************************!*\
  !*** ./lib/api-auth.ts ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createApiResponse: () => (/* binding */ createApiResponse),\n/* harmony export */   createErrorResponse: () => (/* binding */ createErrorResponse),\n/* harmony export */   withAuth: () => (/* binding */ withAuth),\n/* harmony export */   withPermissions: () => (/* binding */ withPermissions),\n/* harmony export */   withRole: () => (/* binding */ withRole)\n/* harmony export */ });\n/* harmony import */ var _auth__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./auth */ \"(rsc)/./lib/auth.ts\");\n\nasync function withAuth(request, handler) {\n    try {\n        // Get authenticated user\n        const user = await (0,_auth__WEBPACK_IMPORTED_MODULE_0__.getAuthenticatedUser)();\n        if (!user) {\n            return new Response(JSON.stringify({\n                error: \"Authentication required\"\n            }), {\n                status: 401,\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                }\n            });\n        }\n        // Add user to request object\n        const authenticatedRequest = request;\n        authenticatedRequest.user = user;\n        // Call the handler\n        const result = await handler(authenticatedRequest);\n        // If result is already a Response, return it\n        if (result instanceof Response) {\n            return result;\n        }\n        // Otherwise, wrap in Response\n        return new Response(JSON.stringify(result), {\n            status: 200,\n            headers: {\n                \"Content-Type\": \"application/json\"\n            }\n        });\n    } catch (error) {\n        console.error(\"API error:\", error);\n        return new Response(JSON.stringify({\n            error: \"Internal server error\"\n        }), {\n            status: 500,\n            headers: {\n                \"Content-Type\": \"application/json\"\n            }\n        });\n    }\n}\nasync function withPermissions(request, permissions, handler, options = {}) {\n    const { requireAll = false } = options;\n    return withAuth(request, async (authenticatedRequest)=>{\n        const { user } = authenticatedRequest;\n        // Check permissions\n        const hasRequiredPermissions = requireAll ? (0,_auth__WEBPACK_IMPORTED_MODULE_0__.hasAllPermissions)(user, permissions) : (0,_auth__WEBPACK_IMPORTED_MODULE_0__.hasAnyPermission)(user, permissions);\n        if (!hasRequiredPermissions) {\n            return new Response(JSON.stringify({\n                error: \"Insufficient permissions\",\n                required: permissions,\n                requireAll\n            }), {\n                status: 403,\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                }\n            });\n        }\n        return handler(authenticatedRequest);\n    });\n}\nasync function withRole(request, roles, handler) {\n    return withAuth(request, async (authenticatedRequest)=>{\n        const { user } = authenticatedRequest;\n        // Check role\n        if (!user.role || !roles.includes(user.role.code)) {\n            return new Response(JSON.stringify({\n                error: \"Insufficient role access\",\n                required: roles,\n                current: user.role?.code || null\n            }), {\n                status: 403,\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                }\n            });\n        }\n        return handler(authenticatedRequest);\n    });\n}\nfunction createApiResponse(data, status = 200, message) {\n    const response = {\n        data\n    };\n    if (message) response.message = message;\n    return new Response(JSON.stringify(response), {\n        status,\n        headers: {\n            \"Content-Type\": \"application/json\"\n        }\n    });\n}\nfunction createErrorResponse(error, status = 400) {\n    return new Response(JSON.stringify({\n        error\n    }), {\n        status,\n        headers: {\n            \"Content-Type\": \"application/json\"\n        }\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./lib/api-auth.ts\n");

/***/ }),

/***/ "(rsc)/./lib/audit.ts":
/*!**********************!*\
  !*** ./lib/audit.ts ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getChangedFields: () => (/* binding */ getChangedFields),\n/* harmony export */   getClientIP: () => (/* binding */ getClientIP),\n/* harmony export */   getUserAgent: () => (/* binding */ getUserAgent),\n/* harmony export */   logAccountAudit: () => (/* binding */ logAccountAudit),\n/* harmony export */   logAudit: () => (/* binding */ logAudit),\n/* harmony export */   logContactAudit: () => (/* binding */ logContactAudit),\n/* harmony export */   logUserAudit: () => (/* binding */ logUserAudit)\n/* harmony export */ });\n/* harmony import */ var _db__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./db */ \"(rsc)/./lib/db.ts\");\n\n/**\n * Centralized audit logging utility\n * Logs all CRUD operations and system events for compliance and tracking\n */ async function logAudit(params) {\n    try {\n        await _db__WEBPACK_IMPORTED_MODULE_0__.prisma.auditLog.create({\n            data: {\n                tenantId: params.tenantId,\n                userId: params.userId,\n                action: params.action,\n                entityName: params.entityName,\n                entityId: params.entityId,\n                requestId: params.requestId,\n                changedFields: params.changedFields ? JSON.stringify(params.changedFields) : undefined,\n                previousValues: params.previousValues ? JSON.stringify(params.previousValues) : undefined,\n                newValues: params.newValues ? JSON.stringify(params.newValues) : undefined,\n                ipAddress: params.ipAddress,\n                userAgent: params.userAgent,\n                metadata: params.metadata ? JSON.stringify(params.metadata) : undefined\n            }\n        });\n    } catch (error) {\n        // Don't throw errors from audit logging to avoid breaking main operations\n        console.error(\"Failed to log audit event:\", error);\n    }\n}\n/**\n * Helper function to extract changed fields between two objects\n */ function getChangedFields(previous, current) {\n    const changed = {};\n    // Check for changed values\n    for(const key in current){\n        if (previous[key] !== current[key]) {\n            changed[key] = {\n                from: previous[key],\n                to: current[key]\n            };\n        }\n    }\n    // Check for removed fields\n    for(const key in previous){\n        if (!(key in current)) {\n            changed[key] = {\n                from: previous[key],\n                to: null\n            };\n        }\n    }\n    return changed;\n}\n/**\n * Helper function to get client IP from request headers\n */ function getClientIP(request) {\n    const forwarded = request.headers.get(\"x-forwarded-for\");\n    const realIP = request.headers.get(\"x-real-ip\");\n    const cfConnectingIP = request.headers.get(\"cf-connecting-ip\");\n    if (forwarded) {\n        return forwarded.split(\",\")[0].trim();\n    }\n    if (realIP) {\n        return realIP;\n    }\n    if (cfConnectingIP) {\n        return cfConnectingIP;\n    }\n    return undefined;\n}\n/**\n * Helper function to get user agent from request headers\n */ function getUserAgent(request) {\n    return request.headers.get(\"user-agent\") || undefined;\n}\n/**\n * Audit logging for account operations\n */ async function logAccountAudit(action, accountId, userId, tenantId, request, previousValues, newValues) {\n    const changedFields = previousValues && newValues ? getChangedFields(previousValues, newValues) : undefined;\n    await logAudit({\n        userId,\n        tenantId,\n        action,\n        entityName: \"Account\",\n        entityId: accountId,\n        changedFields,\n        previousValues,\n        newValues,\n        ipAddress: getClientIP(request),\n        userAgent: getUserAgent(request)\n    });\n}\n/**\n * Audit logging for contact operations\n */ async function logContactAudit(action, contactId, userId, tenantId, request, previousValues, newValues) {\n    const changedFields = previousValues && newValues ? getChangedFields(previousValues, newValues) : undefined;\n    await logAudit({\n        userId,\n        tenantId,\n        action,\n        entityName: \"Contact\",\n        entityId: contactId,\n        changedFields,\n        previousValues,\n        newValues,\n        ipAddress: getClientIP(request),\n        userAgent: getUserAgent(request)\n    });\n}\n/**\n * Audit logging for user operations\n */ async function logUserAudit(action, targetUserId, userId, tenantId, request, previousValues, newValues) {\n    const changedFields = previousValues && newValues ? getChangedFields(previousValues, newValues) : undefined;\n    await logAudit({\n        userId,\n        tenantId,\n        action,\n        entityName: \"User\",\n        entityId: targetUserId,\n        changedFields,\n        previousValues,\n        newValues,\n        ipAddress: getClientIP(request),\n        userAgent: getUserAgent(request)\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./lib/audit.ts\n");

/***/ }),

/***/ "(rsc)/./lib/auth.ts":
/*!*********************!*\
  !*** ./lib/auth.ts ***!
  \*********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   cleanupExpiredSessions: () => (/* binding */ cleanupExpiredSessions),\n/* harmony export */   clearSessionCookie: () => (/* binding */ clearSessionCookie),\n/* harmony export */   createUserSession: () => (/* binding */ createUserSession),\n/* harmony export */   getAuthenticatedUser: () => (/* binding */ getAuthenticatedUser),\n/* harmony export */   hasAllPermissions: () => (/* binding */ hasAllPermissions),\n/* harmony export */   hasAnyPermission: () => (/* binding */ hasAnyPermission),\n/* harmony export */   hasPermission: () => (/* binding */ hasPermission),\n/* harmony export */   hashPassword: () => (/* binding */ hashPassword),\n/* harmony export */   setSessionCookie: () => (/* binding */ setSessionCookie),\n/* harmony export */   terminateAllUserSessions: () => (/* binding */ terminateAllUserSessions),\n/* harmony export */   terminateSession: () => (/* binding */ terminateSession),\n/* harmony export */   verifyPassword: () => (/* binding */ verifyPassword)\n/* harmony export */ });\n/* harmony import */ var bcryptjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! bcryptjs */ \"(rsc)/./node_modules/bcryptjs/index.js\");\n/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! crypto */ \"crypto\");\n/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(crypto__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var next_headers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/headers */ \"(rsc)/./node_modules/next/dist/api/headers.js\");\n/* harmony import */ var _db__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./db */ \"(rsc)/./lib/db.ts\");\n\n\n\n\nconst ONE_DAY_MS = 24 * 60 * 60 * 1000;\nconst SALT_ROUNDS = 12;\nfunction resolveSessionDurationDays() {\n    const raw = process.env.SESSION_DURATION_DAYS ?? \"7\";\n    const parsed = Number.parseInt(raw, 10);\n    if (!Number.isFinite(parsed) || parsed <= 0) {\n        console.warn(`SESSION_DURATION_DAYS must be a positive integer, received \"${raw}\". Using default: 7`);\n        return 7;\n    }\n    return parsed;\n}\nconst SESSION_DURATION_DAYS = resolveSessionDurationDays();\nconst SESSION_DURATION_MS = SESSION_DURATION_DAYS * ONE_DAY_MS;\nasync function hashPassword(password) {\n    return bcryptjs__WEBPACK_IMPORTED_MODULE_0__[\"default\"].hash(password, SALT_ROUNDS);\n}\nasync function verifyPassword(password, hash) {\n    return bcryptjs__WEBPACK_IMPORTED_MODULE_0__[\"default\"].compare(password, hash);\n}\nfunction generateOpaqueToken() {\n    return crypto__WEBPACK_IMPORTED_MODULE_1___default().randomBytes(32).toString(\"base64url\");\n}\nasync function createUserSession(userId, tenantId, ipAddress, userAgent) {\n    const sessionToken = generateOpaqueToken();\n    const expiresAt = new Date(Date.now() + SESSION_DURATION_MS);\n    const session = await _db__WEBPACK_IMPORTED_MODULE_3__.prisma.userSession.create({\n        data: {\n            tenantId,\n            userId,\n            sessionToken,\n            ipAddress: ipAddress ?? null,\n            userAgent: userAgent ?? null,\n            expiresAt,\n            lastSeenAt: new Date()\n        }\n    });\n    return {\n        sessionToken,\n        sessionId: session.id,\n        expiresAt\n    };\n}\nasync function getAuthenticatedUser(sessionToken) {\n    if (!sessionToken) {\n        const cookieStore = await (0,next_headers__WEBPACK_IMPORTED_MODULE_2__.cookies)();\n        sessionToken = cookieStore.get(\"session-token\")?.value;\n    }\n    if (!sessionToken) {\n        return null;\n    }\n    const session = await _db__WEBPACK_IMPORTED_MODULE_3__.prisma.userSession.findFirst({\n        where: {\n            sessionToken,\n            expiresAt: {\n                gt: new Date()\n            },\n            terminatedAt: null\n        }\n    });\n    if (!session) {\n        return null;\n    }\n    await _db__WEBPACK_IMPORTED_MODULE_3__.prisma.userSession.update({\n        where: {\n            id: session.id\n        },\n        data: {\n            lastSeenAt: new Date()\n        }\n    });\n    const user = await _db__WEBPACK_IMPORTED_MODULE_3__.prisma.user.findFirst({\n        where: {\n            id: session.userId,\n            tenantId: session.tenantId,\n            status: {\n                in: [\n                    \"Active\",\n                    \"Invited\"\n                ]\n            }\n        },\n        include: {\n            role: {\n                include: {\n                    permissions: {\n                        include: {\n                            permission: true\n                        }\n                    }\n                }\n            }\n        }\n    });\n    if (!user) {\n        return null;\n    }\n    return {\n        id: user.id,\n        tenantId: user.tenantId,\n        email: user.email,\n        firstName: user.firstName,\n        lastName: user.lastName,\n        fullName: user.fullName,\n        roleId: user.roleId,\n        status: user.status,\n        role: user.role ? {\n            id: user.role.id,\n            code: user.role.code,\n            name: user.role.name,\n            permissions: user.role.permissions.map((rp)=>({\n                    id: rp.permission.id,\n                    code: rp.permission.code,\n                    name: rp.permission.name,\n                    category: rp.permission.category\n                }))\n        } : undefined\n    };\n}\nasync function terminateSession(sessionId) {\n    await _db__WEBPACK_IMPORTED_MODULE_3__.prisma.userSession.update({\n        where: {\n            id: sessionId\n        },\n        data: {\n            terminatedAt: new Date()\n        }\n    });\n}\nasync function terminateAllUserSessions(userId, excludeSessionId) {\n    const where = excludeSessionId ? {\n        userId,\n        terminatedAt: null,\n        id: {\n            not: excludeSessionId\n        }\n    } : {\n        userId,\n        terminatedAt: null\n    };\n    await _db__WEBPACK_IMPORTED_MODULE_3__.prisma.userSession.updateMany({\n        where,\n        data: {\n            terminatedAt: new Date()\n        }\n    });\n}\nasync function cleanupExpiredSessions() {\n    const result = await _db__WEBPACK_IMPORTED_MODULE_3__.prisma.userSession.updateMany({\n        where: {\n            expiresAt: {\n                lt: new Date()\n            },\n            terminatedAt: null\n        },\n        data: {\n            terminatedAt: new Date()\n        }\n    });\n    return result.count;\n}\nfunction hasPermission(user, permissionCode) {\n    if (!user.role?.permissions) {\n        return false;\n    }\n    return user.role.permissions.some((p)=>p.code === permissionCode);\n}\nfunction hasAnyPermission(user, permissionCodes) {\n    return permissionCodes.some((code)=>hasPermission(user, code));\n}\nfunction hasAllPermissions(user, permissionCodes) {\n    return permissionCodes.every((code)=>hasPermission(user, code));\n}\nasync function setSessionCookie(sessionToken, expiresAt) {\n    const cookieStore = await (0,next_headers__WEBPACK_IMPORTED_MODULE_2__.cookies)();\n    cookieStore.set(\"session-token\", sessionToken, {\n        expires: expiresAt,\n        httpOnly: true,\n        secure: \"development\" === \"production\",\n        sameSite:  false ? 0 : \"lax\",\n        path: \"/\"\n    });\n}\nasync function clearSessionCookie() {\n    const cookieStore = await (0,next_headers__WEBPACK_IMPORTED_MODULE_2__.cookies)();\n    cookieStore.delete(\"session-token\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./lib/auth.ts\n");

/***/ }),

/***/ "(rsc)/./lib/db.ts":
/*!*******************!*\
  !*** ./lib/db.ts ***!
  \*******************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   checkDatabaseHealth: () => (/* binding */ checkDatabaseHealth),\n/* harmony export */   disconnect: () => (/* binding */ disconnect),\n/* harmony export */   prisma: () => (/* binding */ prisma),\n/* harmony export */   testConnection: () => (/* binding */ testConnection),\n/* harmony export */   withRetry: () => (/* binding */ withRetry)\n/* harmony export */ });\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @prisma/client */ \"@prisma/client\");\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_prisma_client__WEBPACK_IMPORTED_MODULE_0__);\n\nconst globalForPrisma = globalThis;\n// Enhanced Prisma client configuration with connection pooling and retry logic\nconst prisma = globalForPrisma.prisma ?? new _prisma_client__WEBPACK_IMPORTED_MODULE_0__.PrismaClient({\n    log:  true ? [\n        \"query\",\n        \"error\",\n        \"warn\"\n    ] : 0,\n    datasources: {\n        db: {\n            url: process.env.DATABASE_URL\n        }\n    }\n});\nif (true) globalForPrisma.prisma = prisma;\n// Retry mechanism for database operations\nasync function withRetry(operation, maxRetries = 3, delay = 1000) {\n    let lastError = null;\n    for(let attempt = 1; attempt <= maxRetries; attempt++){\n        try {\n            return await operation();\n        } catch (error) {\n            lastError = error instanceof Error ? error : new Error(\"Unknown error\");\n            if (attempt === maxRetries) {\n                throw lastError;\n            }\n            console.warn(`Database operation failed (attempt ${attempt}/${maxRetries}), retrying in ${delay}ms...`, lastError.message);\n            await new Promise((resolve)=>setTimeout(resolve, delay));\n            delay *= 2 // Exponential backoff\n            ;\n        }\n    }\n    throw lastError || new Error(\"Operation failed after all retries\");\n}\n// Connection testing utility\nasync function testConnection() {\n    try {\n        await withRetry(async ()=>{\n            await prisma.$connect();\n        });\n        console.log(\"✅ Database connection successful\");\n        return {\n            status: \"healthy\",\n            timestamp: new Date()\n        };\n    } catch (error) {\n        console.error(\"❌ Database connection failed:\", error);\n        return {\n            status: \"unhealthy\",\n            error: error instanceof Error ? error.message : \"Unknown error\",\n            timestamp: new Date()\n        };\n    }\n}\n// Health check function\nasync function checkDatabaseHealth() {\n    try {\n        await withRetry(async ()=>{\n            await prisma.$queryRaw`SELECT 1`;\n        });\n        return {\n            status: \"healthy\",\n            timestamp: new Date()\n        };\n    } catch (error) {\n        return {\n            status: \"unhealthy\",\n            error: error instanceof Error ? error.message : \"Unknown error\",\n            timestamp: new Date()\n        };\n    }\n}\n// Graceful shutdown\nasync function disconnect() {\n    await prisma.$disconnect();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9saWIvZGIudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUE2QztBQUU3QyxNQUFNQyxrQkFBa0JDO0FBSXhCLCtFQUErRTtBQUN4RSxNQUFNQyxTQUFTRixnQkFBZ0JFLE1BQU0sSUFBSSxJQUFJSCx3REFBWUEsQ0FBQztJQUMvREksS0FBS0MsS0FBeUIsR0FBZ0I7UUFBQztRQUFTO1FBQVM7S0FBTyxHQUFHLENBQVM7SUFDcEZDLGFBQWE7UUFDWEMsSUFBSTtZQUNGQyxLQUFLSCxRQUFRSSxHQUFHLENBQUNDLFlBQVk7UUFDL0I7SUFDRjtBQUNGLEdBQUU7QUFFRixJQUFJTCxJQUF5QixFQUFjSixnQkFBZ0JFLE1BQU0sR0FBR0E7QUFFcEUsMENBQTBDO0FBQ25DLGVBQWVRLFVBQ3BCQyxTQUEyQixFQUMzQkMsYUFBcUIsQ0FBQyxFQUN0QkMsUUFBZ0IsSUFBSTtJQUVwQixJQUFJQyxZQUEwQjtJQUU5QixJQUFLLElBQUlDLFVBQVUsR0FBR0EsV0FBV0gsWUFBWUcsVUFBVztRQUN0RCxJQUFJO1lBQ0YsT0FBTyxNQUFNSjtRQUNmLEVBQUUsT0FBT0ssT0FBTztZQUNkRixZQUFZRSxpQkFBaUJDLFFBQVFELFFBQVEsSUFBSUMsTUFBTTtZQUV2RCxJQUFJRixZQUFZSCxZQUFZO2dCQUMxQixNQUFNRTtZQUNSO1lBRUFJLFFBQVFDLElBQUksQ0FBQyxDQUFDLG1DQUFtQyxFQUFFSixRQUFRLENBQUMsRUFBRUgsV0FBVyxlQUFlLEVBQUVDLE1BQU0sS0FBSyxDQUFDLEVBQUVDLFVBQVVNLE9BQU87WUFDekgsTUFBTSxJQUFJQyxRQUFRQyxDQUFBQSxVQUFXQyxXQUFXRCxTQUFTVDtZQUNqREEsU0FBUyxFQUFFLHNCQUFzQjs7UUFDbkM7SUFDRjtJQUVBLE1BQU1DLGFBQWEsSUFBSUcsTUFBTTtBQUMvQjtBQUVBLDZCQUE2QjtBQUN0QixlQUFlTztJQUNwQixJQUFJO1FBQ0YsTUFBTWQsVUFBVTtZQUNkLE1BQU1SLE9BQU91QixRQUFRO1FBQ3ZCO1FBQ0FQLFFBQVFmLEdBQUcsQ0FBQztRQUNaLE9BQU87WUFBRXVCLFFBQVE7WUFBV0MsV0FBVyxJQUFJQztRQUFPO0lBQ3BELEVBQUUsT0FBT1osT0FBTztRQUNkRSxRQUFRRixLQUFLLENBQUMsaUNBQWlDQTtRQUMvQyxPQUFPO1lBQUVVLFFBQVE7WUFBYVYsT0FBT0EsaUJBQWlCQyxRQUFRRCxNQUFNSSxPQUFPLEdBQUc7WUFBaUJPLFdBQVcsSUFBSUM7UUFBTztJQUN2SDtBQUNGO0FBRUEsd0JBQXdCO0FBQ2pCLGVBQWVDO0lBQ3BCLElBQUk7UUFDRixNQUFNbkIsVUFBVTtZQUNkLE1BQU1SLE9BQU80QixTQUFTLENBQUMsUUFBUSxDQUFDO1FBQ2xDO1FBQ0EsT0FBTztZQUFFSixRQUFRO1lBQVdDLFdBQVcsSUFBSUM7UUFBTztJQUNwRCxFQUFFLE9BQU9aLE9BQU87UUFDZCxPQUFPO1lBQUVVLFFBQVE7WUFBYVYsT0FBT0EsaUJBQWlCQyxRQUFRRCxNQUFNSSxPQUFPLEdBQUc7WUFBaUJPLFdBQVcsSUFBSUM7UUFBTztJQUN2SDtBQUNGO0FBRUEsb0JBQW9CO0FBQ2IsZUFBZUc7SUFDcEIsTUFBTTdCLE9BQU84QixXQUFXO0FBQzFCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY29tbWlzc2FibGUtY3JtLy4vbGliL2RiLnRzPzFkZjAiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUHJpc21hQ2xpZW50IH0gZnJvbSAnQHByaXNtYS9jbGllbnQnXG5cbmNvbnN0IGdsb2JhbEZvclByaXNtYSA9IGdsb2JhbFRoaXMgYXMgdW5rbm93biBhcyB7XG4gIHByaXNtYTogUHJpc21hQ2xpZW50IHwgdW5kZWZpbmVkXG59XG5cbi8vIEVuaGFuY2VkIFByaXNtYSBjbGllbnQgY29uZmlndXJhdGlvbiB3aXRoIGNvbm5lY3Rpb24gcG9vbGluZyBhbmQgcmV0cnkgbG9naWNcbmV4cG9ydCBjb25zdCBwcmlzbWEgPSBnbG9iYWxGb3JQcmlzbWEucHJpc21hID8/IG5ldyBQcmlzbWFDbGllbnQoe1xuICBsb2c6IHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAnZGV2ZWxvcG1lbnQnID8gWydxdWVyeScsICdlcnJvcicsICd3YXJuJ10gOiBbJ2Vycm9yJ10sXG4gIGRhdGFzb3VyY2VzOiB7XG4gICAgZGI6IHtcbiAgICAgIHVybDogcHJvY2Vzcy5lbnYuREFUQUJBU0VfVVJMLFxuICAgIH0sXG4gIH0sXG59KVxuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykgZ2xvYmFsRm9yUHJpc21hLnByaXNtYSA9IHByaXNtYVxuXG4vLyBSZXRyeSBtZWNoYW5pc20gZm9yIGRhdGFiYXNlIG9wZXJhdGlvbnNcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiB3aXRoUmV0cnk8VD4oXG4gIG9wZXJhdGlvbjogKCkgPT4gUHJvbWlzZTxUPixcbiAgbWF4UmV0cmllczogbnVtYmVyID0gMyxcbiAgZGVsYXk6IG51bWJlciA9IDEwMDBcbik6IFByb21pc2U8VD4ge1xuICBsZXQgbGFzdEVycm9yOiBFcnJvciB8IG51bGwgPSBudWxsXG4gIFxuICBmb3IgKGxldCBhdHRlbXB0ID0gMTsgYXR0ZW1wdCA8PSBtYXhSZXRyaWVzOyBhdHRlbXB0KyspIHtcbiAgICB0cnkge1xuICAgICAgcmV0dXJuIGF3YWl0IG9wZXJhdGlvbigpXG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgIGxhc3RFcnJvciA9IGVycm9yIGluc3RhbmNlb2YgRXJyb3IgPyBlcnJvciA6IG5ldyBFcnJvcignVW5rbm93biBlcnJvcicpXG4gICAgICBcbiAgICAgIGlmIChhdHRlbXB0ID09PSBtYXhSZXRyaWVzKSB7XG4gICAgICAgIHRocm93IGxhc3RFcnJvclxuICAgICAgfVxuICAgICAgXG4gICAgICBjb25zb2xlLndhcm4oYERhdGFiYXNlIG9wZXJhdGlvbiBmYWlsZWQgKGF0dGVtcHQgJHthdHRlbXB0fS8ke21heFJldHJpZXN9KSwgcmV0cnlpbmcgaW4gJHtkZWxheX1tcy4uLmAsIGxhc3RFcnJvci5tZXNzYWdlKVxuICAgICAgYXdhaXQgbmV3IFByb21pc2UocmVzb2x2ZSA9PiBzZXRUaW1lb3V0KHJlc29sdmUsIGRlbGF5KSlcbiAgICAgIGRlbGF5ICo9IDIgLy8gRXhwb25lbnRpYWwgYmFja29mZlxuICAgIH1cbiAgfVxuICBcbiAgdGhyb3cgbGFzdEVycm9yIHx8IG5ldyBFcnJvcignT3BlcmF0aW9uIGZhaWxlZCBhZnRlciBhbGwgcmV0cmllcycpXG59XG5cbi8vIENvbm5lY3Rpb24gdGVzdGluZyB1dGlsaXR5XG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gdGVzdENvbm5lY3Rpb24oKSB7XG4gIHRyeSB7XG4gICAgYXdhaXQgd2l0aFJldHJ5KGFzeW5jICgpID0+IHtcbiAgICAgIGF3YWl0IHByaXNtYS4kY29ubmVjdCgpXG4gICAgfSlcbiAgICBjb25zb2xlLmxvZygn4pyFIERhdGFiYXNlIGNvbm5lY3Rpb24gc3VjY2Vzc2Z1bCcpXG4gICAgcmV0dXJuIHsgc3RhdHVzOiAnaGVhbHRoeScsIHRpbWVzdGFtcDogbmV3IERhdGUoKSB9XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc29sZS5lcnJvcign4p2MIERhdGFiYXNlIGNvbm5lY3Rpb24gZmFpbGVkOicsIGVycm9yKVxuICAgIHJldHVybiB7IHN0YXR1czogJ3VuaGVhbHRoeScsIGVycm9yOiBlcnJvciBpbnN0YW5jZW9mIEVycm9yID8gZXJyb3IubWVzc2FnZSA6ICdVbmtub3duIGVycm9yJywgdGltZXN0YW1wOiBuZXcgRGF0ZSgpIH1cbiAgfVxufVxuXG4vLyBIZWFsdGggY2hlY2sgZnVuY3Rpb25cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBjaGVja0RhdGFiYXNlSGVhbHRoKCkge1xuICB0cnkge1xuICAgIGF3YWl0IHdpdGhSZXRyeShhc3luYyAoKSA9PiB7XG4gICAgICBhd2FpdCBwcmlzbWEuJHF1ZXJ5UmF3YFNFTEVDVCAxYFxuICAgIH0pXG4gICAgcmV0dXJuIHsgc3RhdHVzOiAnaGVhbHRoeScsIHRpbWVzdGFtcDogbmV3IERhdGUoKSB9XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgcmV0dXJuIHsgc3RhdHVzOiAndW5oZWFsdGh5JywgZXJyb3I6IGVycm9yIGluc3RhbmNlb2YgRXJyb3IgPyBlcnJvci5tZXNzYWdlIDogJ1Vua25vd24gZXJyb3InLCB0aW1lc3RhbXA6IG5ldyBEYXRlKCkgfVxuICB9XG59XG5cbi8vIEdyYWNlZnVsIHNodXRkb3duXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZGlzY29ubmVjdCgpIHtcbiAgYXdhaXQgcHJpc21hLiRkaXNjb25uZWN0KClcbn1cbiJdLCJuYW1lcyI6WyJQcmlzbWFDbGllbnQiLCJnbG9iYWxGb3JQcmlzbWEiLCJnbG9iYWxUaGlzIiwicHJpc21hIiwibG9nIiwicHJvY2VzcyIsImRhdGFzb3VyY2VzIiwiZGIiLCJ1cmwiLCJlbnYiLCJEQVRBQkFTRV9VUkwiLCJ3aXRoUmV0cnkiLCJvcGVyYXRpb24iLCJtYXhSZXRyaWVzIiwiZGVsYXkiLCJsYXN0RXJyb3IiLCJhdHRlbXB0IiwiZXJyb3IiLCJFcnJvciIsImNvbnNvbGUiLCJ3YXJuIiwibWVzc2FnZSIsIlByb21pc2UiLCJyZXNvbHZlIiwic2V0VGltZW91dCIsInRlc3RDb25uZWN0aW9uIiwiJGNvbm5lY3QiLCJzdGF0dXMiLCJ0aW1lc3RhbXAiLCJEYXRlIiwiY2hlY2tEYXRhYmFzZUhlYWx0aCIsIiRxdWVyeVJhdyIsImRpc2Nvbm5lY3QiLCIkZGlzY29ubmVjdCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./lib/db.ts\n");

/***/ }),

/***/ "(rsc)/./lib/validation.ts":
/*!***************************!*\
  !*** ./lib/validation.ts ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   US_STATE_CODES: () => (/* binding */ US_STATE_CODES),\n/* harmony export */   VALIDATION_PATTERNS: () => (/* binding */ VALIDATION_PATTERNS),\n/* harmony export */   createValidationErrorResponse: () => (/* binding */ createValidationErrorResponse),\n/* harmony export */   formatPhoneNumber: () => (/* binding */ formatPhoneNumber),\n/* harmony export */   normalizeEmail: () => (/* binding */ normalizeEmail),\n/* harmony export */   normalizeState: () => (/* binding */ normalizeState),\n/* harmony export */   validateAccountData: () => (/* binding */ validateAccountData),\n/* harmony export */   validateContactData: () => (/* binding */ validateContactData),\n/* harmony export */   validateEmail: () => (/* binding */ validateEmail),\n/* harmony export */   validatePhone: () => (/* binding */ validatePhone),\n/* harmony export */   validateRequiredString: () => (/* binding */ validateRequiredString),\n/* harmony export */   validateState: () => (/* binding */ validateState),\n/* harmony export */   validateUrl: () => (/* binding */ validateUrl),\n/* harmony export */   validateZip: () => (/* binding */ validateZip)\n/* harmony export */ });\n/**\r\n * Server-side data validation utilities\r\n * Implements contract requirements for field validation\r\n */ // Validation patterns per contract requirements\nconst VALIDATION_PATTERNS = {\n    // Email format: proper@email.com\n    email: /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/,\n    // Phone format: xxx-xxx-xxxx\n    phone: /^\\d{3}-\\d{3}-\\d{4}$/,\n    // URL format: https://website.com\n    url: /^https?:\\/\\/(www\\.)?[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}(\\/.*)?$/,\n    // State: 2-letter codes only\n    state: /^[A-Z]{2}$/,\n    // Zip: Maximum 12 characters\n    zip: /^.{1,12}$/\n};\n// US State codes for validation\nconst US_STATE_CODES = [\n    \"AL\",\n    \"AK\",\n    \"AZ\",\n    \"AR\",\n    \"CA\",\n    \"CO\",\n    \"CT\",\n    \"DE\",\n    \"FL\",\n    \"GA\",\n    \"HI\",\n    \"ID\",\n    \"IL\",\n    \"IN\",\n    \"IA\",\n    \"KS\",\n    \"KY\",\n    \"LA\",\n    \"ME\",\n    \"MD\",\n    \"MA\",\n    \"MI\",\n    \"MN\",\n    \"MS\",\n    \"MO\",\n    \"MT\",\n    \"NE\",\n    \"NV\",\n    \"NH\",\n    \"NJ\",\n    \"NM\",\n    \"NY\",\n    \"NC\",\n    \"ND\",\n    \"OH\",\n    \"OK\",\n    \"OR\",\n    \"PA\",\n    \"RI\",\n    \"SC\",\n    \"SD\",\n    \"TN\",\n    \"TX\",\n    \"UT\",\n    \"VT\",\n    \"VA\",\n    \"WA\",\n    \"WV\",\n    \"WI\",\n    \"WY\",\n    \"DC\" // Washington DC\n];\n/**\r\n * Validates email format according to contract requirements\r\n */ function validateEmail(email) {\n    const errors = [];\n    if (!email) {\n        return {\n            isValid: true,\n            errors: []\n        } // Optional field\n        ;\n    }\n    if (typeof email !== \"string\") {\n        errors.push({\n            field: \"email\",\n            message: \"Email must be a string\",\n            value: email\n        });\n    } else if (!VALIDATION_PATTERNS.email.test(email)) {\n        errors.push({\n            field: \"email\",\n            message: \"Email must be in format: proper@email.com\",\n            value: email\n        });\n    }\n    return {\n        isValid: errors.length === 0,\n        errors\n    };\n}\n/**\r\n * Validates phone format according to contract requirements (xxx-xxx-xxxx)\r\n */ function validatePhone(phone, fieldName = \"phone\") {\n    const errors = [];\n    if (!phone) {\n        return {\n            isValid: true,\n            errors: []\n        } // Optional field\n        ;\n    }\n    if (typeof phone !== \"string\") {\n        errors.push({\n            field: fieldName,\n            message: \"Phone must be a string\",\n            value: phone\n        });\n    } else if (!VALIDATION_PATTERNS.phone.test(phone)) {\n        errors.push({\n            field: fieldName,\n            message: \"Phone must be in format: xxx-xxx-xxxx\",\n            value: phone\n        });\n    }\n    return {\n        isValid: errors.length === 0,\n        errors\n    };\n}\n/**\r\n * Validates URL format according to contract requirements\r\n */ function validateUrl(url, fieldName = \"url\") {\n    const errors = [];\n    if (!url) {\n        return {\n            isValid: true,\n            errors: []\n        } // Optional field\n        ;\n    }\n    if (typeof url !== \"string\") {\n        errors.push({\n            field: fieldName,\n            message: \"URL must be a string\",\n            value: url\n        });\n    } else if (!VALIDATION_PATTERNS.url.test(url)) {\n        errors.push({\n            field: fieldName,\n            message: \"URL must be in format: https://website.com\",\n            value: url\n        });\n    }\n    return {\n        isValid: errors.length === 0,\n        errors\n    };\n}\n/**\r\n * Validates state code according to contract requirements (2-letter codes only)\r\n */ function validateState(state, fieldName = \"state\") {\n    const errors = [];\n    if (!state) {\n        return {\n            isValid: true,\n            errors: []\n        } // Optional field\n        ;\n    }\n    if (typeof state !== \"string\") {\n        errors.push({\n            field: fieldName,\n            message: \"State must be a string\",\n            value: state\n        });\n    } else if (!VALIDATION_PATTERNS.state.test(state)) {\n        errors.push({\n            field: fieldName,\n            message: \"State must be a 2-letter code (e.g., CA, NY, TX)\",\n            value: state\n        });\n    } else if (!US_STATE_CODES.includes(state)) {\n        errors.push({\n            field: fieldName,\n            message: \"State must be a valid US state code\",\n            value: state\n        });\n    }\n    return {\n        isValid: errors.length === 0,\n        errors\n    };\n}\n/**\r\n * Validates zip code according to contract requirements (maximum 12 characters)\r\n */ function validateZip(zip, fieldName = \"zip\") {\n    const errors = [];\n    if (!zip) {\n        return {\n            isValid: true,\n            errors: []\n        } // Optional field\n        ;\n    }\n    if (typeof zip !== \"string\") {\n        errors.push({\n            field: fieldName,\n            message: \"Zip code must be a string\",\n            value: zip\n        });\n    } else if (!VALIDATION_PATTERNS.zip.test(zip)) {\n        errors.push({\n            field: fieldName,\n            message: \"Zip code must be maximum 12 characters\",\n            value: zip\n        });\n    }\n    return {\n        isValid: errors.length === 0,\n        errors\n    };\n}\n/**\r\n * Validates required string fields\r\n */ function validateRequiredString(value, fieldName) {\n    const errors = [];\n    if (!value || typeof value === \"string\" && value.trim().length === 0) {\n        errors.push({\n            field: fieldName,\n            message: `${fieldName} is required`,\n            value\n        });\n    } else if (typeof value !== \"string\") {\n        errors.push({\n            field: fieldName,\n            message: `${fieldName} must be a string`,\n            value\n        });\n    }\n    return {\n        isValid: errors.length === 0,\n        errors\n    };\n}\n/**\r\n * Validates account data according to contract requirements\r\n */ function validateAccountData(data) {\n    const errors = [];\n    // Required fields\n    const accountNameResult = validateRequiredString(data.accountName, \"Account Name\");\n    errors.push(...accountNameResult.errors);\n    const accountTypeResult = validateRequiredString(data.accountTypeId, \"Account Type\");\n    errors.push(...accountTypeResult.errors);\n    // Optional fields with format validation\n    if (data.websiteUrl) {\n        const urlResult = validateUrl(data.websiteUrl, \"Website URL\");\n        errors.push(...urlResult.errors);\n    }\n    // Address validation\n    if (data.shippingAddress) {\n        const shippingStateResult = validateState(data.shippingAddress.state, \"Shipping State\");\n        errors.push(...shippingStateResult.errors);\n        const shippingZipResult = validateZip(data.shippingAddress.postalCode, \"Shipping Zip\");\n        errors.push(...shippingZipResult.errors);\n    }\n    if (data.billingAddress) {\n        const billingStateResult = validateState(data.billingAddress.state, \"Billing State\");\n        errors.push(...billingStateResult.errors);\n        const billingZipResult = validateZip(data.billingAddress.postalCode, \"Billing Zip\");\n        errors.push(...billingZipResult.errors);\n    }\n    return {\n        isValid: errors.length === 0,\n        errors\n    };\n}\n/**\r\n * Validates contact data according to contract requirements\r\n */ function validateContactData(data) {\n    const errors = [];\n    // Required fields\n    const firstNameResult = validateRequiredString(data.firstName, \"First Name\");\n    errors.push(...firstNameResult.errors);\n    const lastNameResult = validateRequiredString(data.lastName, \"Last Name\");\n    errors.push(...lastNameResult.errors);\n    const accountIdResult = validateRequiredString(data.accountId, \"Account\");\n    errors.push(...accountIdResult.errors);\n    // Optional fields with format validation\n    if (data.emailAddress) {\n        const emailResult = validateEmail(data.emailAddress);\n        errors.push(...emailResult.errors);\n    }\n    if (data.workPhone) {\n        const workPhoneResult = validatePhone(data.workPhone, \"Work Phone\");\n        errors.push(...workPhoneResult.errors);\n    }\n    if (data.mobilePhone) {\n        const mobilePhoneResult = validatePhone(data.mobilePhone, \"Mobile Phone\");\n        errors.push(...mobilePhoneResult.errors);\n    }\n    return {\n        isValid: errors.length === 0,\n        errors\n    };\n}\n/**\r\n * Formats phone number to xxx-xxx-xxxx format\r\n */ function formatPhoneNumber(phone) {\n    if (!phone) return \"\";\n    // Remove all non-digit characters\n    const digits = phone.replace(/\\D/g, \"\");\n    // Format as xxx-xxx-xxxx\n    if (digits.length === 10) {\n        return `${digits.slice(0, 3)}-${digits.slice(3, 6)}-${digits.slice(6)}`;\n    }\n    return phone // Return original if not 10 digits\n    ;\n}\n/**\r\n * Normalizes email address (lowercase, trim)\r\n */ function normalizeEmail(email) {\n    if (!email) return \"\";\n    return email.toLowerCase().trim();\n}\n/**\r\n * Normalizes state code (uppercase, trim)\r\n */ function normalizeState(state) {\n    if (!state) return \"\";\n    return state.toUpperCase().trim();\n}\n/**\r\n * Creates a standardized validation error response\r\n */ function createValidationErrorResponse(errors) {\n    return new Response(JSON.stringify({\n        error: \"Validation failed\",\n        details: errors\n    }), {\n        status: 400,\n        headers: {\n            \"Content-Type\": \"application/json\"\n        }\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./lib/validation.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/bcryptjs"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Faccounts%2Froute&page=%2Fapi%2Faccounts%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Faccounts%2Froute.ts&appDir=C%3A%5CUsers%5CAdministrator%5C.cursor-projects%5Cprojects%5CCommissable%20CRM%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5CAdministrator%5C.cursor-projects%5Cprojects%5CCommissable%20CRM&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();